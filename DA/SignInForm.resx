<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>